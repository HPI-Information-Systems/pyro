package de.hpi.isg.pyro.core;

import de.hpi.isg.pyro.properties.MetanomeProperty;

/**
 * Describes the configuration of Pyro.
 */
public class Configuration extends AbstractPFDConfiguration {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Traversal settings.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    @MetanomeProperty
    int parallelism = 0;

    @MetanomeProperty
    boolean isDeferFailedLaunchPads = true;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Sampling settings.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    @MetanomeProperty
    int sampleSize = 1_000;

    @MetanomeProperty
    double sampleBooster = 10;

    @MetanomeProperty
    Integer seed = null;

    @MetanomeProperty
    double estimateConfidence = 0.9;

    @MetanomeProperty
    int randomAscendThreads = 2;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Cache settings.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    @MetanomeProperty
    boolean isCacheIntermediatePLIs = false;

    @MetanomeProperty
    boolean isUseWeakReferencesForPlis = true;

    @MetanomeProperty
    boolean isUseWeakReferencesForSamples = false;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Miscellaneous settings.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    @MetanomeProperty
    boolean isPauseInitially = false;

    @MetanomeProperty
    boolean isCheckEstimates = false;
    
}
